{"version":3,"sources":["components/Navigation.js","../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/index.js","screens/Basic.js","screens/Nested.js","screens/WithArray.js","screens/Async.js","App.js","index.js"],"names":["Navigation","Box","height","display","justifyContent","Button","variant","as","RouterLink","to","Symbol","iterator","asyncIterator","_catch","body","recover","result","e","then","validationPropTypes","initialValues","PropTypes","id","name","string","validationSchema","callBack","isRequired","useFieldValidationForm","handleValidateArrayField","setTouched","value","fieldSchema","object","validationSchemaObject","setErrors","prevState","handleValidateField","isObject","objectKey","objectValue","useState","formData","setFormData","errors","isTouched","isOnSubmitCalled","setOnSubmitCalled","Object","key","Array","isArray","nestedKey","type","parseInt","useEffect","compare","hasErrors","error","errorState","formDataKeys","reduceObjectToArray","errorsKeys","areFieldsValidated","nestedSchemaObject","schemaObject","nestedValue","handleChange","getValueByType","handleSubmit","target","handleValidateSchema","handleArrayOnChange","newArray","currentValue","handleArrayPushField","data","handleArrayRemoveField","field","prevErrors","Basic","values","setValues","email","password","required","min","outputValues","formErrors","method","onSubmit","FormLabel","htmlFor","Input","onChange","onBlur","JSON","stringify","Nested","user","WithArray","food","reduce","acc","map","foodType","index","Flex","direction","length","IconButton","aria-label","icon","onClick","marginLeft","generate","Async","asyncData","setAsyncData","isLoading","setLoading","setTimeout","App","maxWidth","margin","exact","path","ReactDOM","render","ThemeProvider","ColorModeProvider","CSSReset","document","getElementById"],"mappings":"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","file":"static/js/main.206ac5ed.chunk.js","sourcesContent":["import { Button, Box } from '@chakra-ui/core'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nfunction Navigation() {\n  return (\n    <>\n      <Box height='2' />\n      <Box display='flex' justifyContent='space-around'>\n        <Button\n          variant='link'\n          as={RouterLink}\n          to='/react-field-validation-form'\n        >\n          Basic\n        </Button>\n        <Button\n          variant='link'\n          as={RouterLink}\n          to='/react-field-validation-form/nested'\n        >\n          Nested\n        </Button>\n        <Button\n          variant='link'\n          as={RouterLink}\n          to='/react-field-validation-form/array'\n        >\n          Array\n        </Button>\n        <Button\n          variant='link'\n          as={RouterLink}\n          to='/react-field-validation-form/async'\n        >\n          Async\n        </Button>\n      </Box>\n      <Box height='2' />\n    </>\n  )\n}\n\nexport default Navigation\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import compare from 'just-compare'\nimport { useEffect, useState } from 'react'\nimport { object } from 'yup'\nimport PropTypes from 'prop-types/prop-types'\n\nconst validationPropTypes = {\n  initialValues: PropTypes.objectOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.objectOf(PropTypes.string),\n      PropTypes.arrayOf(\n        PropTypes.exact({\n          id: PropTypes.string,\n          name: PropTypes.string\n        })\n      )\n    ])\n  ),\n  validationSchema: PropTypes.objectOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.objectOf(PropTypes.object)\n    ])\n  ),\n  callBack: PropTypes.func.isRequired\n}\n\nexport default function useFieldValidationForm({\n  initialValues,\n  validationSchema,\n  callBack\n}) {\n  const [formData, setFormData] = useState(initialValues)\n  const [errors, setErrors] = useState({})\n  const [isTouched, setTouched] = useState(false)\n  const [isOnSubmitCalled, setOnSubmitCalled] = useState(false)\n\n  useEffect(() => {\n    PropTypes.checkPropTypes(\n      validationPropTypes,\n      { callBack, initialValues, validationSchema },\n      'useFieldValidationForm',\n      useFieldValidationForm\n    )\n  }, [initialValues, callBack, validationSchema])\n\n  useEffect(() => {\n    const areInitialValuesEqual = compare(formData, initialValues)\n\n    if (!areInitialValuesEqual && !isTouched) {\n      setFormData(initialValues)\n    }\n  }, [initialValues, formData, isTouched])\n\n  useEffect(() => {\n    const errorState = Object.values(errors)\n      .map((error) =>\n        typeof error === 'object' && error !== null\n          ? Object.values(error)\n          : error\n      )\n      .flat()\n      .filter((error) => error !== null)\n\n    const hasErrors = errorState.length > 0 || Object.keys(errors).length === 0\n\n    const formDataKeys = reduceObjectToArray(formData)\n\n    const errorsKeys = reduceObjectToArray(errors)\n\n    const areFieldsValidated = formDataKeys.every(\n      (v) => errorsKeys.indexOf(v) !== -1\n    )\n\n    if (hasErrors && areFieldsValidated) {\n      setOnSubmitCalled(false)\n    }\n\n    if (isOnSubmitCalled && isTouched && !hasErrors && areFieldsValidated) {\n      callBack(formData)\n      setFormData(initialValues)\n      setTouched(false)\n      setOnSubmitCalled(false)\n      setErrors({})\n    }\n  }, [\n    callBack,\n    errors,\n    initialValues,\n    formData,\n    isTouched,\n    isOnSubmitCalled,\n    validationSchema\n  ])\n\n  function reduceObjectToArray(obj) {\n    return Object.entries(obj)\n      .map(([key, value]) => {\n        const isObject = typeof value === 'object' && !Array.isArray(value)\n        const isArray = Array.isArray(value)\n\n        if (value && isObject) {\n          return Object.keys(value)\n        }\n        if (isArray) {\n          return value.map((nestedKey) => nestedKey.id)\n        }\n        return key\n      })\n      .flat()\n  }\n\n  function getValueByType(type, value) {\n    if (type === 'number') {\n      return parseInt(value)\n    }\n    return value\n  }\n\n  let nestedSchemaObject = {}\n  const schemaObject = Object.entries(validationSchema).reduce(\n    (acc, [key, value]) => {\n      if (!Object.keys(value).includes('_deps')) {\n        nestedSchemaObject = Object.entries(value).reduce(\n          (nestedAcc, [nestedKey, nestedValue]) => ({\n            [nestedKey]: { [nestedKey]: nestedValue },\n            ...nestedAcc\n          }),\n          {}\n        )\n        return acc\n      }\n      return {\n        [key]: { [key]: value },\n        ...acc\n      }\n    },\n    {}\n  )\n\n  const validationSchemaObject = {\n    ...schemaObject,\n    ...nestedSchemaObject\n  }\n\n  async function handleValidateField(e) {\n    const { value, name } = e.target\n    const isObject = name.includes('.')\n    if (isObject) {\n      const [objectKey, objectValue] = name.split('.')\n      setTouched(true)\n\n      const fieldSchema = object().shape(validationSchemaObject[objectValue])\n\n      try {\n        await fieldSchema.validate({ [objectValue]: value })\n        setErrors((prevState) => ({\n          ...prevState,\n          [objectKey]: {\n            ...prevState[objectKey],\n            [objectValue]: null\n          }\n        }))\n      } catch (e) {\n        setErrors((prevState) => ({\n          ...prevState,\n          [objectKey]: {\n            ...prevState[objectKey],\n            [objectValue]: e.message\n          }\n        }))\n      }\n    } else {\n      setTouched(true)\n\n      const fieldSchema = object().shape(validationSchemaObject[name])\n      try {\n        await fieldSchema.validate({ [name]: value })\n        setErrors((prevState) => ({ ...prevState, [name]: null }))\n      } catch (e) {\n        setErrors((prevState) => ({ ...prevState, [name]: e.message }))\n      }\n    }\n  }\n\n  function handleChange(e) {\n    const { name, value, type } = e.target\n\n    const isObject = name.includes('.')\n    if (isObject) {\n      const [objectKey, objectValue] = name.split('.')\n\n      setFormData((prevState) => ({\n        ...prevState,\n        [objectKey]: {\n          ...formData[objectKey],\n          [objectValue]: getValueByType(type, value)\n        }\n      }))\n      setTouched(true)\n    } else {\n      setFormData((prevState) => ({\n        ...prevState,\n        [name]: getValueByType(type, value)\n      }))\n      setTouched(true)\n    }\n  }\n\n  function handleArrayOnChange({ e, id }) {\n    const { name, value } = e.target\n\n    const newArray = formData[name].map((currentValue) =>\n      currentValue.id === id ? { ...currentValue, name: value } : currentValue\n    )\n\n    setFormData((prevState) => ({ ...prevState, [name]: newArray }))\n    setTouched(true)\n  }\n\n  function handleArrayPushField({ key, data }) {\n    setFormData((prevState) => ({\n      ...prevState,\n      [key]: [...formData[key], data]\n    }))\n    setTouched(true)\n  }\n\n  function handleArrayRemoveField({ key, id }) {\n    setFormData((prevState) => ({\n      ...prevState,\n      [key]: prevState[key].filter((field) => field.id !== id)\n    }))\n    setErrors((prevErrors) => {\n      if (prevErrors?.[key]?.[id]) delete prevErrors[key][id]\n      return prevErrors\n    })\n    setTouched(true)\n  }\n\n  async function handleValidateArrayField({ e, id }) {\n    const { name, value } = e.target\n    const fieldSchema = object().shape(validationSchemaObject[name])\n    try {\n      await fieldSchema.validate({ [name]: value })\n      setErrors((prevState) => ({\n        ...prevState,\n        ...(prevState[name]\n          ? {\n              [name]: {\n                ...prevState[name],\n                [id]: null\n              }\n            }\n          : {\n              [name]: {\n                [id]: null\n              }\n            })\n      }))\n    } catch (e) {\n      setErrors((prevState) => ({\n        ...prevState,\n        ...(prevState[name]\n          ? {\n              [name]: {\n                ...prevState[name],\n                [id]: e.message\n              }\n            }\n          : {\n              [name]: {\n                [id]: e.message\n              }\n            })\n      }))\n    }\n    setTouched(true)\n  }\n\n  function handleValidateSchema(schema) {\n    const errorsKeys = reduceObjectToArray(errors)\n\n    Object.entries(schema).forEach(([key, value]) => {\n      const isObject =\n        typeof formData[key] === 'object' && !Array.isArray(formData[key])\n      const isArray = Array.isArray(formData[key])\n      if (isArray) {\n        if (formData[key].length) {\n          formData[key].map(({ id, name }) => {\n            if (!errorsKeys.includes(id)) {\n              handleValidateArrayField({\n                e: { target: { name: key, value: name } },\n                id\n              })\n            }\n          })\n        }\n      }\n\n      if (isObject) {\n        Object.keys(value).forEach((nestedKey) => {\n          if (!errorsKeys.includes(nestedKey)) {\n            handleValidateField({\n              target: {\n                name: `${key}.${nestedKey}`,\n                value: formData[key][nestedKey]\n              }\n            })\n          }\n        })\n      }\n\n      if (!isArray && !isObject && !errorsKeys.includes(key)) {\n        handleValidateField({ target: { name: key, value: formData[key] } })\n      }\n    })\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    handleValidateSchema(validationSchema)\n    setOnSubmitCalled(true)\n  }\n\n  return {\n    formData,\n    handleChange,\n    handleSubmit,\n    handleValidateField,\n    handleArrayOnChange,\n    handleArrayPushField,\n    handleArrayRemoveField,\n    handleValidateArrayField,\n    errors\n  }\n}\n","import React, { useState } from 'react'\nimport { string } from 'yup'\nimport useFieldValidationForm from 'react-field-validation-form'\nimport { Button, Box, FormLabel, Input } from '@chakra-ui/core'\n\nfunction Basic() {\n  const [values, setValues] = useState(null)\n\n  const {\n    formData,\n    errors: formErrors,\n    handleChange,\n    handleSubmit,\n    handleValidateField,\n  } = useFieldValidationForm({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n\n    validationSchema: {\n      email: string().required('Field Required!').email('Format invalid!'),\n      password: string()\n        .required('Field Required!')\n        .min(3, 'Minimum of 3 characters'),\n    },\n\n    callBack: (outputValues) => {\n      setValues(outputValues)\n    },\n  })\n\n  return (\n    <Box>\n      <Box height='8' />\n      <form method='POST' onSubmit={handleSubmit}>\n        <FormLabel htmlFor='email'>Email</FormLabel>\n        <Input\n          type='text'\n          name='email'\n          id='email'\n          value={formData.email}\n          onChange={handleChange}\n          onBlur={handleValidateField}\n        />\n        <div>{formErrors?.email}</div>\n\n        <Box height='8' />\n        <FormLabel htmlFor='password'>Password</FormLabel>\n        <Input\n          type='password'\n          name='password'\n          id='password'\n          value={formData.password}\n          onChange={handleChange}\n          onBlur={handleValidateField}\n        />\n        <div>{formErrors?.password}</div>\n        <Box height='8' />\n\n        <Button variant='solid' type='submit'>\n          submit{' '}\n        </Button>\n      </form>\n\n      <Box height='8' />\n      <Box>Output Values: {values && JSON.stringify(values, null, 2)}</Box>\n    </Box>\n  )\n}\n\nexport default Basic\n","import React, { useState } from 'react'\nimport { string } from 'yup'\nimport useFieldValidationForm from 'react-field-validation-form'\nimport { Button, Box, FormLabel, Input } from '@chakra-ui/core'\n\nfunction Nested() {\n  const [values, setValues] = useState(null)\n\n  const {\n    formData,\n    errors: formErrors,\n    handleChange,\n    handleSubmit,\n    handleValidateField,\n  } = useFieldValidationForm({\n    initialValues: {\n      user: {\n        name: '',\n        email: '',\n      },\n    },\n\n    validationSchema: {\n      user: {\n        name: string()\n          .required('Field Required!')\n          .min(3, 'Minimum of 3 characters'),\n        email: string().required('Field Required!').email('Format invalid!'),\n      },\n    },\n\n    callBack: (outputValues) => {\n      setValues(outputValues)\n    },\n  })\n\n  return (\n    <Box>\n      <Box height='8' />\n      <form method='POST' onSubmit={handleSubmit}>\n        <FormLabel htmlFor='name'>Name</FormLabel>\n        <Input\n          type='name'\n          name='user.name'\n          id='name'\n          value={formData.user.name}\n          onChange={handleChange}\n          onBlur={handleValidateField}\n        />\n\n        <div>{formErrors?.user?.name}</div>\n        <Box height='8' />\n\n        <FormLabel htmlFor='email'>Email</FormLabel>\n        <Input\n          type='text'\n          name='user.email'\n          id='email'\n          value={formData.user.email}\n          onChange={handleChange}\n          onBlur={handleValidateField}\n        />\n        <div>{formErrors?.user?.email}</div>\n\n        <Box height='8' />\n        <Button variant='solid' type='submit'>\n          submit{' '}\n        </Button>\n      </form>\n\n      <Box height='8' />\n      <Box>Output Values: {values && JSON.stringify(values, null, 2)}</Box>\n    </Box>\n  )\n}\n\nexport default Nested\n","import React, { useState } from 'react'\nimport { string } from 'yup'\nimport useFieldValidationForm from 'react-field-validation-form'\nimport {\n  Button,\n  Box,\n  FormLabel,\n  Input,\n  IconButton,\n  Flex,\n} from '@chakra-ui/core'\nimport { generate } from 'shortid'\n\nfunction WithArray() {\n  const [values, setValues] = useState(null)\n\n  const {\n    formData,\n    errors: formErrors,\n    handleChange,\n    handleSubmit,\n    handleValidateField,\n    handleArrayOnChange,\n    handleValidateArrayField,\n    handleArrayRemoveField,\n    handleArrayPushField,\n  } = useFieldValidationForm({\n    initialValues: {\n      name: '',\n      food: [{ id: '1', name: '' }],\n    },\n\n    validationSchema: {\n      name: string()\n        .required('Field Required!')\n        .min(3, 'Minimum of 3 characters'),\n      food: string()\n        .required('Field Required!')\n        .min(2, 'Minimum of 2 characters'),\n    },\n\n    callBack: (outputValues) => {\n      const food = outputValues.food.reduce(\n        (acc, { id, name }) => [...acc, name],\n        []\n      )\n\n      setValues({ ...outputValues, food })\n    },\n  })\n\n  return (\n    <Box>\n      <Box height='8' />\n      <form method='POST' onSubmit={handleSubmit}>\n        <FormLabel htmlFor='name'>Name</FormLabel>\n        <Input\n          type='name'\n          name='name'\n          id='name'\n          value={formData.name}\n          onChange={handleChange}\n          onBlur={handleValidateField}\n        />\n\n        <div>{formErrors?.name}</div>\n        <Box height='8' />\n\n        {formData.food.map((foodType, index) => (\n          <Box key={index}>\n            <Flex direction='column'>\n              <FormLabel htmlFor='food'>\n                Preferred food No: {index + 1}\n              </FormLabel>\n              <Flex>\n                <Input\n                  type='text'\n                  name='food'\n                  id={foodType.id}\n                  value={foodType.name}\n                  onChange={(e) =>\n                    handleArrayOnChange({ e, id: foodType.id, index })\n                  }\n                  onBlur={(e) =>\n                    handleValidateArrayField({ e, id: foodType.id })\n                  }\n                />\n\n                {formData.food.length > 1 && (\n                  <IconButton\n                    aria-label='Remove Food'\n                    icon='close'\n                    onClick={() =>\n                      handleArrayRemoveField({ key: 'food', id: foodType.id })\n                    }\n                    marginLeft='2'\n                  />\n                )}\n              </Flex>\n              <Box>{formErrors?.food?.[foodType.id]}</Box>\n            </Flex>\n            <Box height='8' />\n          </Box>\n        ))}\n\n        <Button\n          onClick={() =>\n            handleArrayPushField({\n              key: 'food',\n              data: { id: generate(), name: '' },\n            })\n          }\n        >\n          Add new type of Food\n        </Button>\n\n        <Box height='8' />\n        <Button variant='solid' type='submit'>\n          submit{' '}\n        </Button>\n      </form>\n\n      <Box height='8' />\n      <Box>Output Values: {values && JSON.stringify(values, null, 2)}</Box>\n    </Box>\n  )\n}\n\nexport default WithArray\n","import React, { useState, useEffect } from 'react'\nimport { string } from 'yup'\nimport useFieldValidationForm from 'react-field-validation-form'\nimport {\n  Button,\n  Box,\n  FormLabel,\n  Input,\n  IconButton,\n  Flex,\n} from '@chakra-ui/core'\nimport { generate } from 'shortid'\n\nfunction Async() {\n  const [asyncData, setAsyncData] = useState(null)\n  const [isLoading, setLoading] = useState(false)\n  const [values, setValues] = useState(null)\n\n  const {\n    formData,\n    errors: formErrors,\n    handleChange,\n    handleSubmit,\n    handleValidateField,\n    handleArrayOnChange,\n    handleValidateArrayField,\n    handleArrayRemoveField,\n    handleArrayPushField,\n  } = useFieldValidationForm({\n    initialValues: {\n      name: asyncData?.name ?? '',\n      food: asyncData?.food.length\n        ? asyncData.food.map((type, index) => ({\n            id: `${index + 1}`,\n            name: type,\n          }))\n        : [{ id: '1', name: '' }],\n    },\n\n    validationSchema: {\n      name: string()\n        .required('Field Required!')\n        .min(3, 'Minimum of 3 characters'),\n      food: string()\n        .required('Field Required!')\n        .min(2, 'Minimum of 2 characters'),\n    },\n\n    callBack: (outputValues) => {\n      const food = outputValues.food.reduce(\n        (acc, { id, name }) => [...acc, name],\n        []\n      )\n\n      setValues({ ...outputValues, food })\n    },\n  })\n\n  useEffect(() => {\n    if (!asyncData) {\n      setLoading(true)\n      setTimeout(() => {\n        setAsyncData({\n          name: 'Example Name',\n          food: ['fries', 'fish', 'eggs', 'tofu'],\n        })\n        setLoading(false)\n      }, 3000)\n    }\n  }, [asyncData])\n\n  return (\n    <Box>\n      {isLoading ? (\n        <Box>\n          <Box height='8' />\n          <Box height='8' />\n          <Box>Data is Loading ...... </Box>\n        </Box>\n      ) : (\n        <Box>\n          <Box height='8' />\n          <form method='POST' onSubmit={handleSubmit}>\n            <FormLabel htmlFor='name'>Name</FormLabel>\n            <Input\n              type='name'\n              name='name'\n              id='name'\n              value={formData.name}\n              onChange={handleChange}\n              onBlur={handleValidateField}\n            />\n\n            <div>{formErrors?.name}</div>\n            <Box height='8' />\n\n            {formData.food.map((foodType, index) => (\n              <Box key={index}>\n                <Flex direction='column'>\n                  <FormLabel htmlFor='food'>\n                    Preferred food No: {index + 1}\n                  </FormLabel>\n                  <Flex>\n                    <Input\n                      type='text'\n                      name='food'\n                      id={foodType.id}\n                      value={foodType.name}\n                      onChange={(e) =>\n                        handleArrayOnChange({ e, id: foodType.id, index })\n                      }\n                      onBlur={(e) =>\n                        handleValidateArrayField({ e, id: foodType.id })\n                      }\n                    />\n\n                    {formData.food.length > 1 && (\n                      <IconButton\n                        aria-label='Remove Food'\n                        icon='close'\n                        onClick={() =>\n                          handleArrayRemoveField({\n                            key: 'food',\n                            id: foodType.id,\n                          })\n                        }\n                        marginLeft='2'\n                      />\n                    )}\n                  </Flex>\n                  <Box>{formErrors?.food?.[foodType.id]}</Box>\n                </Flex>\n                <Box height='8' />\n              </Box>\n            ))}\n\n            <Button\n              onClick={() =>\n                handleArrayPushField({\n                  key: 'food',\n                  data: { id: generate(), name: '' },\n                })\n              }\n            >\n              Add new type of Food\n            </Button>\n\n            <Box height='8' />\n            <Button variant='solid' type='submit'>\n              submit{' '}\n            </Button>\n          </form>\n\n          <Box height='8' />\n          <Box>\n            Output Values to be sent back to server:{' '}\n            {values && JSON.stringify(values, null, 2)}\n          </Box>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default Async\n","import { Box } from '@chakra-ui/core'\nimport React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Navigation from './components/Navigation'\nimport Basic from './screens/Basic'\nimport Nested from './screens/Nested'\nimport WithArray from './screens/WithArray'\nimport Async from './screens/Async'\n\nfunction App() {\n  return (\n    <Box maxWidth='xl' margin='auto'>\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route exact path='/react-field-validation-form'>\n            <Basic />\n          </Route>\n          <Route path='/react-field-validation-form/nested'>\n            <Nested />\n          </Route>\n          <Route path='/react-field-validation-form/array'>\n            <WithArray />\n          </Route>\n          <Route path='/react-field-validation-form/async'>\n            <Async />\n          </Route>\n        </Switch>\n      </Router>\n    </Box>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider, ColorModeProvider, CSSReset } from '@chakra-ui/core'\nimport App from './App'\n\nReactDOM.render(\n  <ThemeProvider>\n    <ColorModeProvider>\n      <CSSReset />\n      <App />\n    </ColorModeProvider>\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}